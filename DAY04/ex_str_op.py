## -------------------------------------------------
## str타입과 연산자
## -------------------------------------------------
## 산술연산자 : +, -, *, /, //, %, **
## - 지  원 연산자 : +, *
## - 미지원 연산자 : 나머지 연산자 
## -------------------------------------------------
year = '2026'
msg = 'Good Luck'

## 덧셈 => str + str => strstr
##        다른타입+str => ERROR
print(f'{year} + {msg} => {year + msg}')

#print(f'{2025} + {msg} => {2025. + msg}')      # ERROR
print(f'{2025.} + {msg} => {str(2025.) + msg}') # 형변환

## 곱셈 => str * int => 숫자만큼 str반복연결 ---------
print(f'{year} * {5} => {year * 5}')

## -------------------------------------------------
## 비교연산자 : 문자 단위로 코드값 변경 후 비교연산 수행
## -------------------------------------------------
## 문자 1개 ==> 코드값 변경해주는 내장함수 : ord(문자 1개) //더 넣으면 에러
## 코드값   ==> 문자로 변경해주는 내장함수 : chr(코드값)

## 인코딩(Encoding) : 문자 => 코드
print(f'G 코드값 => {ord("G")}, g 코드값 => {ord("g")}')

## 디코딩(Decoding) : 코드 => 문자
print(f'71  문자 => {chr(71)}, 103  문자 => {chr(103)}')
print(f'G > g => {"G" > "g"}')

## -----------------------------------------------------------
## 멤버연산자 : 원소/요소를 가진 자료형에 사용 가능
##             int, float, bool 기본타입은 사용 불가
## - 요소     in 요소담고있는자료 : 존재하는 원소/요소면 True
## - 요소 not in 요소담고있는자료 : 존재하지않는 원소/요소면 True
## ------------------------------------------------------------
## 문자 1개
print(f'g in good => {"g" in "good"}')
print(f'G in good => {"G" in "good"}')
print(f'g not in good => {"g" not in "good"}')
print(f'G not in good => {"G" not in "good"}')

## 문자 여러개
print(f'go in good => {"go" in "good"}')
print(f'Go in good => {"Go" in "good"}')
print(f' 날 in 오늘은 좋은 날  => {" 날" in "오늘은 좋은 날"}')
print(f'  날 in 오늘은 좋은 날 => {"  날" in "오늘은 좋은 날"}')