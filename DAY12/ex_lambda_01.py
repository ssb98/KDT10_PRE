## ---------------------------------------------------------------
## 람다 표현식/람다 함수
## 
## - 일회용 사용을 위한 함수
## - 이름 없는 함수 즉, 익명함수
## - 형식 : lambda 매개변수1, ... 매개변수N : 실행코드
## - 반환 : return 키워드 없이 결과를 그 위치에 전달
## - 자주 활용되는 내장함수 : map(), filter(), sorted()
## ---------------------------------------------------------------
print((lambda x, y: x + y)(5,6))


## 내장함수 map(함수이름, iterable) --------------------------------
## [실습1] 내장함수 int() 존재
nums=['2','4','5']  ## ==> int('2'), int('4'), int('5')
print(list(map(int, nums)))  # => <map object at 0x0000019E0E9DF790> => list로 형변환

## [실습2] 내장함수 X => 사용자정의 함수 선언
def calc(num):
    return num*2+10

nums=[2,4,5]
print(list(map(calc, nums)))
print(list(map(lambda n : n*2+10, nums)))


## 함수형식
## 형식 : def 함수이름(파라미터1, ..., 파라미터n):
##            실행코드
##            return 결과

## [1]
## def 함수이름(파라미터1, ..., 파라미터n):
##     실행코드

## [2]
## def 함수이름():
##     실행코드

## [3]
## def 함수이름():
##     실행코드

## [4]
## def 함수이름(파라미터1, ..., 파라미터n):
##     실행코드
##     return 결과

## 매개변수
## - 일반매개변수         <== 전달 ERROR 필수 매개변수      value
## - 가변매개변수         <== 0개 ~ N개                   *value
## - 키워드매개변수       <== 0개 ~ N개                  **value
## - 디폴트/기본매개변수   <== 미제공 시 기본값 사용         value=기본값

## 익명함수/람다함수/람다표현식
## - 일회용으로 사용
## - lambda 매개변수 : 실행코드
## - 무조건 결과 반환
## - 내장함수들 map()/filter()/sorted() 등등과 함께 사용 많이 됨
